{"version":3,"sources":["App.js","index.js"],"names":["App","_useState","useState","_useState2","Object","slicedToArray","listTodo","setlistTodo","_useState3","title","id","check","input","_useState4","todo","setTodo","_useState5","complited","_useState6","count","setCount","_useState7","_useState8","active","setActive","_useState9","_useState10","changeValue","setChangeValue","sortTodo","toConsumableArray","filter","counted","length","todoCheck","map","deleted","todoDeleted","index","splice","setItput","todoList","find","setTitel","changeTitle","event","target","value","defaultValue","ShowList","react_default","a","createElement","onDoubleClick","className","concat","onChange","checked","type","htmlFor","onClick","autoFocus","onBlur","hidden","ShowListActive","ShowListComplited","routers","/","/active","/completed","routeResult","useRoutes","onSubmit","push","titel","preventDefault","addTodo","placeholder","trim","createTodo","style","display","todoAllComplited","some","_objectSpread","allComplited","dist","href","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.5c36be5e.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { useRoutes, A } from \"hookrouter\";\n\nconst App = () => {\n  const [listTodo, setlistTodo] = useState([]);\n  const [todo, setTodo] = useState({title: \"\", id: 0, check: false, input: false});\n  const [count, setCount] =  useState({id: 0, complited: 0});\n  const [active, setActive] = useState(\"all\");\n  const [changeValue, setChangeValue] = useState(\"\");\n\n  const sortTodo = () => {\n    if(active === \"active\") {\n      const sorted = [...listTodo.filter(todo => todo.check === false)];\n      return sorted\n    } else if (active === \"complited\") {\n      const sorted = [...listTodo.filter(todo => todo.check === true)];\n      return sorted\n    } else {\n      return listTodo\n    }\n  }\n\n  const allComplited = () => {\n    let todoAllComplited;\n    if(listTodo.some(todo => todo.check === false)) {\n      todoAllComplited = [...listTodo.map(todo => {\n        return {...todo,\n        check: true}\n      }\n      )];\n    } else {\n      todoAllComplited = [...listTodo.map(todo => {\n          return { ...todo,\n          check: false };\n        })\n      ];\n    }\n    setlistTodo(todoAllComplited);\n  }\n\n  const counted = () => {\n    const complited = [...listTodo.filter(todo => todo.check === false)].length;\n    setCount({id: count.id, complited: complited})\n  }\n\n  const createTodo = (event) => {\n    const value = event.target.value.trim();\n    setTodo({title: value, id: count.id, check: false, input: false});\n  };\n\n  const addTodo = (event) => {\n    if(todo.title !== \"\") {\n      listTodo.push(todo);\n      setTodo({titel: \"\", id: 0, check: false, input: false})\n      count.id++;\n    }\n    event.preventDefault()\n    counted();\n  };\n\n  const check = (id) => {\n    const todoCheck = [...listTodo.map(todo => {\n      if (todo.id === id) {\n        todo.check = !todo.check;\n      }\n      return todo;\n    })]\n    setlistTodo(todoCheck);\n    counted();\n  };\n\n  const deleted = (id) => {\n    const todoDeleted = [...listTodo]\n    listTodo.map((todo, index )=> {\n      if (todo.id === id) {\n        todoDeleted.splice(index, 1);\n      }\n      return todo;\n    })\n    setlistTodo(todoDeleted);\n    counted();\n  }\n\n  const deleteAll = () => {\n    setlistTodo([]);\n    counted();\n  }\n\n  const setItput = (id) => {\n    const todoList = [...listTodo.map(todo => {\n      if (todo.id === id) {\n        todo.input = !todo.input;\n      }\n      return todo;\n    })]\n\n    setlistTodo(todoList);\n    const todo = listTodo.find((todo) => todo.id === id)\n    setChangeValue(todo.title);\n  }\n\n  const setTitel = (id) => {\n    const todoList = [...listTodo.map(todo => {\n      if (todo.id === id) {\n        todo.input = !todo.input;\n        todo.title = changeValue;\n      }\n      return todo;\n    })]\n\n    setlistTodo(todoList);\n  }\n\n  const changeTitle = (event) => {\n    setChangeValue(event.target.value);\n  }\n\n  const defaultValue = (id) => {\n    return changeValue;\n  }\n\n  const ShowList = () => {\n    return sortTodo().map(todo =>{\n      return (\n        <li\n          onDoubleClick={() => setItput(todo.id)}\n          className={`${todo.check ? \"completed\" : \"\"} ${\n            todo.input ? \"editing\" : \"\"\n          }`}\n        >\n          <div className=\"view\">\n            <input\n              onChange={() => check(todo.id)}\n              checked={todo.check}\n              type=\"checkbox\"\n              className=\"toggle\"\n            />\n            <label htmlFor={todo.id}>{todo.title}</label>\n            <button\n              onClick={() => deleted(todo.id)}\n              type=\"button\"\n              className=\"destroy\"\n            />\n          </div>\n          <input\n            onChange={(event) => changeTitle(event)}\n            autoFocus\n            value={changeValue}\n            type=\"text\"\n            onBlur={() => setTitel(todo.id)}\n            className={\"edit\"}\n            hidden={!todo.input}\n          ></input>\n        </li>\n      );\n    })\n  };\n\n  const ShowListActive = () => {\n    return sortTodo().map(todo =>{\n      return (\n        <li\n          onDoubleClick={() => setItput(todo.id)}\n          className={`${todo.check ? \"completed\" : \"\"} ${\n            todo.input ? \"editing\" : \"\"\n          }`}\n        >\n          <div className=\"view\" id={todo.id}>\n            <input\n              value={defaultValue(todo.id)}\n              onChange={() => check(todo.id)}\n              checked={todo.check}\n              type=\"checkbox\"\n              className=\"toggle\"\n            />\n            <label htmlFor={todo.id}>{todo.title}</label>\n            <button\n              onClick={() => deleted(todo.id)}\n              type=\"button\"\n              className=\"destroy\"\n            />\n          </div>\n          <input\n            onChange={(event) => changeTitle(event)}\n            autoFocus\n            value={changeValue}\n            type=\"text\"\n            onBlur={() => setTitel(todo.id)}\n            className={\"edit\"}\n            hidden={!todo.input}\n          ></input>\n        </li>\n      );\n    })\n  };\n\n  const ShowListComplited = () => {\n    return sortTodo().map(todo =>{\n      return (\n        <li\n          onDoubleClick={() => setItput(todo.id)}\n          className={`${todo.check ? \"completed\" : \"\"} ${\n            todo.input ? \"editing\" : \"\"\n          }`}\n        >\n          <div className=\"view\" id={todo.id}>\n            <input value={defaultValue(todo.id)} onChange={() => check(todo.id)} checked={todo.check} type=\"checkbox\" className=\"toggle\" />\n              <label htmlFor={todo.id}>{todo.title}</label>\n            <button onClick={() => deleted(todo.id)} type=\"button\" className=\"destroy\" />\n          </div>\n          <input\n            onChange={(event) => changeTitle(event)}\n            autoFocus\n            value={changeValue}\n            type=\"text\"\n            onBlur={() => setTitel(todo.id)}\n            className={\"edit\"}\n            hidden={!todo.input}\n          ></input>\n        </li>\n      )\n    })\n  };\n\n  const routers = {\n    \"/\": () =>  <ShowList />,\n    \"/active\": () => <ShowListActive />,\n    \"/completed\": () => <ShowListComplited />,\n  };\n\n  const routeResult = useRoutes(routers);\n  return (\n    <section className=\"todoapp\">\n      <header className=\"header\">\n        <h1>todos</h1>\n        <form onSubmit={event => addTodo(event)}>\n          <input\n            value={todo.titel}\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            onChange={event => createTodo(event)}\n            type=\"text\"\n          />\n        </form>\n      </header>\n\n      <section className=\"main\" style={{ display: \"block\" }}>\n        <input type=\"checkbox\" id=\"toggle-all\" className=\"toggle-all\" />\n        <label onClick={() => allComplited()} htmlFor=\"toggle-all\">\n          Mark all as complete\n        </label>\n        <ul className=\"todo-list\">{routeResult || <ShowList />}</ul>\n      </section>\n\n      <footer className=\"footer\" style={{ display: \"block\" }}>\n        <span className=\"todo-count\">\n          {count.complited === 1\n            ? `${count.complited} item left`\n            : `${count.complited} items left`}\n        </span>\n\n        <ul className=\"filters\">\n          <li>\n            <A onClick={() => setActive(\"all\")} href=\"/\" className={`${active === \"all\" ? \"selected\" : \"\"}`}>\n              All\n            </A>\n          </li>\n\n          <li>\n            <A\n              href=\"/active\" onClick={() => setActive(\"active\")}\n              className={`${active === \"active\" ? \"selected\" : \"\"}`}\n            >\n              Active\n            </A>\n          </li>\n\n          <li>\n            <A\n              href=\"/completed\" onClick={() => setActive(\"complited\")}\n              className={`${active === \"complited\" ? \"selected\" : \"\"}`}\n            >\n              Completed\n            </A>\n          </li>\n        </ul>\n\n        <button\n          onClick={() => deleteAll()}\n          type=\"button\"\n          className=\"clear-completed\"\n          style={{ display: \"block\" }}\n        >\n          Clear completed\n        </button>\n      </footer>\n    </section>\n  );\n}\n\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './base.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}